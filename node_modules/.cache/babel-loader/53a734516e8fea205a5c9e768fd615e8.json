{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactWorkspace\\\\hotel-sys\\\\src\\\\components\\\\frontOffice\\\\reservation\\\\ReservationBoxView.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport Paper from '@material-ui/core/Paper';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { useSelector, connect } from 'react-redux';\nimport { compose } from 'redux';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    height: 140,\n    width: 100\n  },\n  control: {\n    padding: theme.spacing(2)\n  }\n}));\n\nfunction ReservatonBoxView(props) {\n  const {\n    useState\n  } = React;\n  const reservations = useSelector(state => state.firestore.ordered.reservation);\n  const [spacing, setSpacing] = React.useState(2);\n  const classes = useStyles();\n\n  const handleChange = event => {\n    setSpacing(Number(event.target.value));\n  };\n\n  const box = new Array(31).fill(new Array(6));\n\n  var getDaysArray = function (start, end) {\n    console.log(start, end);\n\n    for (var arr = [], dt = new Date(start); dt <= end; dt.setDate(dt.getDate() + 1)) {\n      console.log(new Date(dt));\n      arr.push(new Date(dt));\n    }\n\n    return arr;\n  };\n\n  if (reservations != null) {\n    for (var reservation = 0; reservation < reservations.length; reservation++) {\n      for (var room = 0; room < 6; room++) {\n        console.log(reservations[reservation]);\n        const reservedDays = getDaysArray(reservations[reservation].startDay.toDate(), reservations[reservation].endDay.toDate());\n        console.log('Asd' + reservedDays);\n\n        if (room == reservations[reservation].roomNo) {\n          for (var dayOfBooking of reservedDays) {\n            box[dayOfBooking.getDate()][room] = reservations[reservation];\n            console.log(box[dayOfBooking.getDate()][room]);\n          }\n        }\n      }\n    }\n\n    for (var a = 0; a < 31; a++) {\n      for (var b = 0; b < 6; b++) {\n        console.log(a, b);\n      }\n    }\n  }\n\n  console.log(box[8][1]);\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    className: classes.root,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, [0, 1, 2].map(value => /*#__PURE__*/React.createElement(Grid, {\n    key: value,\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }))))));\n}\n\nexport default firestoreConnect([{\n  collection: 'reservation'\n}])(ReservatonBoxView);","map":{"version":3,"sources":["D:/ReactWorkspace/hotel-sys/src/components/frontOffice/reservation/ReservationBoxView.js"],"names":["React","makeStyles","Grid","FormLabel","FormControlLabel","RadioGroup","Radio","Paper","firestoreConnect","useSelector","connect","compose","useStyles","theme","root","flexGrow","paper","height","width","control","padding","spacing","ReservatonBoxView","props","useState","reservations","state","firestore","ordered","reservation","setSpacing","classes","handleChange","event","Number","target","value","box","Array","fill","getDaysArray","start","end","console","log","arr","dt","Date","setDate","getDate","push","length","room","reservedDays","startDay","toDate","endDay","roomNo","dayOfBooking","a","b","map","collection"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { useSelector, connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    height: 140,\r\n    width: 100,\r\n  },\r\n  control: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction  ReservatonBoxView (props)  {\r\n  const { useState } = React;\r\n\r\n  const reservations = useSelector(state => state.firestore.ordered.reservation )\r\n  const [spacing, setSpacing] = React.useState(2);\r\n  const classes = useStyles();\r\n\r\n  const handleChange = (event) => {\r\n    setSpacing(Number(event.target.value));\r\n  };\r\n\r\n  const box = new Array(31).fill(new Array(6)) ;\r\n\r\n  var getDaysArray = function(start, end) {\r\n    console.log(start,end)\r\n    for(var arr=[],dt=new Date(start); dt<=end; dt.setDate(dt.getDate()+1)){\r\n      console.log(new Date(dt))\r\n  \r\n      arr.push(new Date(dt));\r\n    }\r\n    return arr;\r\n};\r\n\r\n\r\n\r\n  if(reservations != null){\r\n  for(var reservation = 0 ; reservation < reservations.length ; reservation++){\r\n\r\n    for(var room = 0 ; room < 6 ; room++){\r\n      console.log(reservations[reservation])\r\n      const reservedDays = getDaysArray(reservations[reservation].startDay.toDate(),reservations[reservation].endDay.toDate());\r\n      console.log('Asd' + reservedDays )\r\n\r\n      if(room == reservations[reservation].roomNo ){\r\n        for(var dayOfBooking of reservedDays){\r\n          box[dayOfBooking.getDate()][room] = reservations[reservation] \r\n          console.log(box[dayOfBooking.getDate()][room])\r\n\r\n        }\r\n      }\r\n      }\r\n  }\r\n  for(var a = 0 ; a < 31 ; a++){\r\n    for(var b = 0 ; b < 6 ; b++){\r\n      console.log(a,b     );\r\n        }\r\n  }\r\n  }\r\n  console.log( box[8][1] );\r\n\r\n  return (\r\n    <Grid container className={classes.root} spacing={2}>\r\n      <Grid item xs={12}>\r\n        <Grid container justify=\"center\" spacing={3}>\r\n          {[0, 1, 2].map((value) => (\r\n            <Grid key={value} item>\r\n              <Paper className={classes.paper} />\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default firestoreConnect([\r\n  {collection: 'reservation'}\r\n]) (ReservatonBoxView)"]},"metadata":{},"sourceType":"module"}