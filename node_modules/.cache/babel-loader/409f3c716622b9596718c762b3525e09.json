{"ast":null,"code":"export const updateRoomType = payload => {\n  console.log(payload);\n  return (dispatch, getState, {\n    getFirestore,\n    getFirebase\n  }) => {\n    const firestore = getFirestore();\n    firestore.collection(\"roomtype\").doc(payload.id).update({\n      name: payload.name,\n      brief: payload.brief,\n      description: payload.description\n    });\n  };\n};\nexport const insertRoomType = payload => {\n  console.log(payload);\n  return (dispatch, getState, {\n    getFirestore,\n    getFirebase\n  }) => {\n    const firestore = getFirestore();\n    firestore.collection('roomtype').doc(payload.id).set({ ...payload\n    }).then(response => {\n      console.log(response);\n    }).catch(respons => {\n      console.log(response);\n    });\n  };\n};\nexport const deleteRoomType = payload => {\n  console.log(payload);\n  return (dispatch, getState, {\n    getFirestore,\n    getFirebase\n  }) => {};\n};","map":{"version":3,"sources":["D:/ReactWorkspace/hotel-sys/src/redux/actions/frontOfficeActions/RoomTypeActions.js"],"names":["updateRoomType","payload","console","log","dispatch","getState","getFirestore","getFirebase","firestore","collection","doc","id","update","name","brief","description","insertRoomType","set","then","response","catch","respons","deleteRoomType"],"mappings":"AAAA,OAAO,MAAMA,cAAc,GAAIC,OAAD,IAAa;AACvCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,SAAO,CAACG,QAAD,EAAUC,QAAV,EAAmB;AAACC,IAAAA,YAAD;AAAcC,IAAAA;AAAd,GAAnB,KAAkD;AACrD,UAAMC,SAAS,GAAGF,YAAY,EAA9B;AACAE,IAAAA,SAAS,CAACC,UAAV,CAAqB,UAArB,EAAiCC,GAAjC,CAAqCT,OAAO,CAACU,EAA7C,EAAiDC,MAAjD,CAAwD;AACpDC,MAAAA,IAAI,EAACZ,OAAO,CAACY,IADuC;AAEpDC,MAAAA,KAAK,EAACb,OAAO,CAACa,KAFsC;AAGpDC,MAAAA,WAAW,EAACd,OAAO,CAACc;AAHgC,KAAxD;AAKH,GAPD;AASH,CAXM;AAaP,OAAO,MAAMC,cAAc,GAAIf,OAAD,IAAa;AACvCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,SAAO,CAACG,QAAD,EAAUC,QAAV,EAAmB;AAACC,IAAAA,YAAD;AAAcC,IAAAA;AAAd,GAAnB,KAAkD;AACrD,UAAMC,SAAS,GAAGF,YAAY,EAA9B;AACAE,IAAAA,SAAS,CAACC,UAAV,CAAqB,UAArB,EAAiCC,GAAjC,CAAqCT,OAAO,CAACU,EAA7C,EAAiDM,GAAjD,CAAqD,EACjD,GAAGhB;AAD8C,KAArD,EAEGiB,IAFH,CAESC,QAAD,IAAc;AAClBjB,MAAAA,OAAO,CAACC,GAAR,CAAYgB,QAAZ;AACH,KAJD,EAIGC,KAJH,CAIUC,OAAD,IAAa;AAClBnB,MAAAA,OAAO,CAACC,GAAR,CAAYgB,QAAZ;AACH,KAND;AAOH,GATD;AAWH,CAbM;AAeP,OAAO,MAAMG,cAAc,GAAIrB,OAAD,IAAa;AACvCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,SAAO,CAACG,QAAD,EAAUC,QAAV,EAAmB;AAACC,IAAAA,YAAD;AAAcC,IAAAA;AAAd,GAAnB,KAAkD,CAExD,CAFD;AAIH,CANM","sourcesContent":["export const updateRoomType = (payload) => {\r\n    console.log(payload)\r\n    return (dispatch,getState,{getFirestore,getFirebase}) => {\r\n        const firestore = getFirestore();\r\n        firestore.collection(\"roomtype\").doc(payload.id).update({\r\n            name:payload.name,\r\n            brief:payload.brief,\r\n            description:payload.description\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport const insertRoomType = (payload) => {\r\n    console.log(payload)\r\n    return (dispatch,getState,{getFirestore,getFirebase}) => {\r\n        const firestore = getFirestore();\r\n        firestore.collection('roomtype').doc(payload.id).set({\r\n            ...payload\r\n        }).then((response) => {\r\n            console.log(response)\r\n        }).catch((respons) => {\r\n            console.log(response)\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const deleteRoomType = (payload) => {\r\n    console.log(payload)\r\n    return (dispatch,getState,{getFirestore,getFirebase}) => {\r\n\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}