{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactWorkspace\\\\hotel-sys\\\\src\\\\components\\\\frontOffice\\\\rooms\\\\Editable.js\";\nimport React from 'react';\nimport MaterialTable from 'material-table';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { useSelector } from 'react-redux';\n\nfunction Editable() {\n  const data = useSelector(state => state.firestore.ordered.roomtype);\n  const {\n    useState\n  } = React;\n  const [columns, setColumns] = useState([{\n    title: 'Name',\n    field: 'name'\n  }, {\n    title: 'Surname',\n    field: 'id',\n    initialEditValue: 'initial edit value'\n  }, {\n    title: 'Birth Year',\n    field: 'brief',\n    type: 'numeric'\n  }, {\n    title: 'Birth Place',\n    field: 'birthCity',\n    lookup: {\n      34: 'İstanbul',\n      63: 'Şanlıurfa'\n    }\n  }]);\n  return /*#__PURE__*/React.createElement(MaterialTable, {\n    title: \"Editable Preview\",\n    columns: columns,\n    data: data,\n    editable: {\n      onRowAdd: newData => new Promise((resolve, reject) => {\n        setTimeout(() => {\n          //setData([...data, newData]);\n          resolve();\n        }, 1000);\n      }),\n      onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n        setTimeout(() => {\n          const dataUpdate = [...data];\n          const index = oldData.tableData.id;\n          dataUpdate[index] = newData; //setData([...dataUpdate]);\n\n          resolve();\n        }, 1000);\n      }),\n      onRowDelete: oldData => new Promise((resolve, reject) => {\n        setTimeout(() => {\n          const dataDelete = [...data];\n          const index = oldData.tableData.id;\n          dataDelete.splice(index, 1); //setData([...dataDelete]);\n\n          resolve();\n        }, 1000);\n      })\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  });\n}\n\nexport default firestoreConnect([{\n  collection: 'roomtype'\n}])(Editable);","map":{"version":3,"sources":["D:/ReactWorkspace/hotel-sys/src/components/frontOffice/rooms/Editable.js"],"names":["React","MaterialTable","firestoreConnect","useSelector","Editable","data","state","firestore","ordered","roomtype","useState","columns","setColumns","title","field","initialEditValue","type","lookup","onRowAdd","newData","Promise","resolve","reject","setTimeout","onRowUpdate","oldData","dataUpdate","index","tableData","id","onRowDelete","dataDelete","splice","collection"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAGC,SAASC,QAAT,GAAoB;AAGjB,QAAMC,IAAI,GAAGF,WAAW,CAACG,KAAK,IAAIA,KAAK,CAACC,SAAN,CAAgBC,OAAhB,CAAwBC,QAAlC,CAAxB;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAeV,KAArB;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBF,QAAQ,CAAC,CACrC;AAAEG,IAAAA,KAAK,EAAE,MAAT;AAAiBC,IAAAA,KAAK,EAAE;AAAxB,GADqC,EAErC;AAAED,IAAAA,KAAK,EAAE,SAAT;AAAoBC,IAAAA,KAAK,EAAE,IAA3B;AAAiCC,IAAAA,gBAAgB,EAAE;AAAnD,GAFqC,EAGrC;AAAEF,IAAAA,KAAK,EAAE,YAAT;AAAuBC,IAAAA,KAAK,EAAE,OAA9B;AAAuCE,IAAAA,IAAI,EAAE;AAA7C,GAHqC,EAIrC;AACEH,IAAAA,KAAK,EAAE,aADT;AAEEC,IAAAA,KAAK,EAAE,WAFT;AAGEG,IAAAA,MAAM,EAAE;AAAE,UAAI,UAAN;AAAkB,UAAI;AAAtB;AAHV,GAJqC,CAAD,CAAtC;AAaA,sBACE,oBAAC,aAAD;AACE,IAAA,KAAK,EAAC,kBADR;AAEE,IAAA,OAAO,EAAEN,OAFX;AAGE,IAAA,IAAI,EAAEN,IAHR;AAIE,IAAA,QAAQ,EAAE;AACRa,MAAAA,QAAQ,EAAEC,OAAO,IACf,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/BC,QAAAA,UAAU,CAAC,MAAM;AACf;AAEAF,UAAAA,OAAO;AACR,SAJS,EAIP,IAJO,CAAV;AAKD,OAND,CAFM;AASRG,MAAAA,WAAW,EAAE,CAACL,OAAD,EAAUM,OAAV,KACX,IAAIL,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/BC,QAAAA,UAAU,CAAC,MAAM;AACf,gBAAMG,UAAU,GAAG,CAAC,GAAGrB,IAAJ,CAAnB;AACA,gBAAMsB,KAAK,GAAGF,OAAO,CAACG,SAAR,CAAkBC,EAAhC;AACAH,UAAAA,UAAU,CAACC,KAAD,CAAV,GAAoBR,OAApB,CAHe,CAIf;;AAEAE,UAAAA,OAAO;AACR,SAPS,EAOP,IAPO,CAAV;AAQD,OATD,CAVM;AAoBRS,MAAAA,WAAW,EAAEL,OAAO,IAClB,IAAIL,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/BC,QAAAA,UAAU,CAAC,MAAM;AACf,gBAAMQ,UAAU,GAAG,CAAC,GAAG1B,IAAJ,CAAnB;AACA,gBAAMsB,KAAK,GAAGF,OAAO,CAACG,SAAR,CAAkBC,EAAhC;AACAE,UAAAA,UAAU,CAACC,MAAX,CAAkBL,KAAlB,EAAyB,CAAzB,EAHe,CAIf;;AAEAN,UAAAA,OAAO;AACR,SAPS,EAOP,IAPO,CAAV;AAQD,OATD;AArBM,KAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAuCD;;AACD,eAAenB,gBAAgB,CAAC,CAC9B;AAAC+B,EAAAA,UAAU,EAAE;AAAb,CAD8B,CAAD,CAAhB,CAEZ7B,QAFY,CAAf","sourcesContent":["import React from 'react'\r\nimport MaterialTable from 'material-table'\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\n function Editable() {\r\n \r\n  \r\n    const data = useSelector(state => state.firestore.ordered.roomtype)\r\n\r\n    const { useState } = React;\r\n    const [columns, setColumns] = useState([\r\n      { title: 'Name', field: 'name' },\r\n      { title: 'Surname', field: 'id', initialEditValue: 'initial edit value' },\r\n      { title: 'Birth Year', field: 'brief', type: 'numeric' },\r\n      {\r\n        title: 'Birth Place',\r\n        field: 'birthCity',\r\n        lookup: { 34: 'İstanbul', 63: 'Şanlıurfa' },\r\n      },\r\n    ]);\r\n  \r\n\r\n  \r\n    return (\r\n      <MaterialTable\r\n        title=\"Editable Preview\"\r\n        columns={columns}\r\n        data={data}\r\n        editable={{\r\n          onRowAdd: newData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                //setData([...data, newData]);\r\n                \r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                const dataUpdate = [...data];\r\n                const index = oldData.tableData.id;\r\n                dataUpdate[index] = newData;\r\n                //setData([...dataUpdate]);\r\n  \r\n                resolve();\r\n              }, 1000)\r\n            }),\r\n          onRowDelete: oldData =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                const dataDelete = [...data];\r\n                const index = oldData.tableData.id;\r\n                dataDelete.splice(index, 1);\r\n                //setData([...dataDelete]);\r\n                \r\n                resolve()\r\n              }, 1000)\r\n            }),\r\n        }}\r\n      />\r\n    )\r\n  }\r\n  export default firestoreConnect([\r\n    {collection: 'roomtype'}\r\n  ])(Editable)"]},"metadata":{},"sourceType":"module"}